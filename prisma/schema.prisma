generator client { provider = "prisma-client-js" }
datasource db { provider = "postgresql"; url = env("DATABASE_URL") }
model Agent { id String @id @default(uuid()) business_name String contact_person String? email String @unique phone String? billing_address Json? status String @default("pending") created_at DateTime @default(now()) users AgentUser[] wallet Wallet? esims Esim[] txns Transaction[] priceRules AgentPriceRule[] }
model AgentUser { id String @id @default(uuid()) agent_id String email String @unique name String? role String @default("agent") created_at DateTime @default(now()) agent Agent @relation(fields: [agent_id], references: [id], onDelete: Cascade) }
model ProductCache { id String @id @default(uuid()) provider String country_code String? region String? plan_code String plan_name String data_amount_gb Decimal? validity_days Int? base_cost_usd Decimal retail_suggested_usd Decimal? updated_at DateTime @default(now()) @@unique([provider, plan_code]) }
model AgentPriceRule { id String @id @default(uuid()) agent_id String plan_code String price_usd Decimal agent Agent @relation(fields: [agent_id], references: [id], onDelete: Cascade) @@unique([agent_id, plan_code]) }
model Wallet { agent_id String @id balance_usd Decimal @default(0) agent Agent @relation(fields: [agent_id], references: [id], onDelete: Cascade) }
model Transaction { id String @id @default(uuid()) agent_id String created_at DateTime @default(now()) type String details Json? amount_usd Decimal balance_after_usd Decimal agent Agent @relation(fields: [agent_id], references: [id], onDelete: Cascade) }
model Esim { id String @id @default(uuid()) agent_id String iccid String? @unique plan_code String customer_name String? tags String[] status String data_used_gb Decimal @default(0) data_total_gb Decimal? purchased_at DateTime? activated_at DateTime? expires_at DateTime? agent Agent @relation(fields: [agent_id], references: [id], onDelete: Cascade) }
model AuditLog { id String @id @default(uuid()) actor_type String actor_id String? action String meta Json? created_at DateTime @default(now()) }
model SignupRequest { id String @id @default(uuid()) business_name String contact_person String? email String phone String? billing_address Json? status String @default("pending") token String @unique created_at DateTime @default(now()) }
